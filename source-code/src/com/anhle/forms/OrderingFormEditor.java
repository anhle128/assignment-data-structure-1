/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.anhle.forms;

import com.anhle.commons.Helper;
import com.anhle.enums.EditorType;
import com.anhle.models.Customer;
import com.anhle.models.Ordering;
import com.anhle.models.Product;
import com.anhle.panels.OrderingPanelManager;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;

/**
 *
 * @author apple
 */
public class OrderingFormEditor extends javax.swing.JFrame {

    private EditorType editorType;
    private Ordering ordering;
    OrderingPanelManager orderingPanelManager;
    
    public OrderingFormEditor(OrderingPanelManager orderingPanelManager) {
        initComponents();
        
        editorType = EditorType.CREATE;
        this.orderingPanelManager = orderingPanelManager;
        
        initDataAndFillComponent();
    }

    public OrderingFormEditor(OrderingPanelManager orderingPanelManager, Ordering ordering) {
        initComponents();
        
        
        editorType = EditorType.EDIT;
        this.ordering = ordering;

        this.orderingPanelManager = orderingPanelManager;
        
        initDataAndFillComponent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btEdit = new javax.swing.JButton();
        lbCustomer = new javax.swing.JLabel();
        lbProduct = new javax.swing.JLabel();
        cbProduct = new javax.swing.JComboBox<>();
        cbCustomer = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lbQuantity.setText("Quantity :");

        jLabel1.setText("Ordering Editor");

        btEdit.setText("Save");
        btEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditActionPerformed(evt);
            }
        });

        lbCustomer.setText("Customer :");

        lbProduct.setText("Product :");

        cbProduct.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbCustomer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btEdit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbQuantity)
                            .addComponent(lbCustomer)
                            .addComponent(lbProduct))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantity)
                            .addComponent(jLabel1)
                            .addComponent(cbCustomer, 0, 180, Short.MAX_VALUE)
                            .addComponent(cbProduct, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(500, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbProduct))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCustomer)
                    .addComponent(cbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbQuantity)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btEdit)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed
        
        ordering.pcode = orderingPanelManager.entities.products.get(cbProduct.getSelectedIndex()).pcode;
        ordering.ccode = orderingPanelManager.entities.customers.get(cbCustomer.getSelectedIndex()).ccode;
        ordering.quantity = Integer.parseInt(txtQuantity.getText());
//
        if(editorType == EditorType.CREATE){
            orderingPanelManager.entities.orderings.add(ordering);
        }
        this.dispose();
        orderingPanelManager.loadDataToTable();
    }//GEN-LAST:event_btEditActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btEdit;
    private javax.swing.JComboBox<String> cbCustomer;
    private javax.swing.JComboBox<String> cbProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lbCustomer;
    private javax.swing.JLabel lbProduct;
    private javax.swing.JLabel lbQuantity;
    private javax.swing.JTextField txtQuantity;
    // End of variables declaration//GEN-END:variables

    private void initDataAndFillComponent() {
        
        String[] arrProductName = new String[orderingPanelManager.entities.products.size()];
        for (int i = 0; i < orderingPanelManager.entities.products.size(); i++) {
            arrProductName[i] = orderingPanelManager.entities.products.get(i).pname;
        }
        cbProduct.setModel(new DefaultComboBoxModel<String>(arrProductName));
       
        String[] arrCustomerName = new String[orderingPanelManager.entities.customers.size()];
        for (int i = 0; i < orderingPanelManager.entities.customers.size(); i++) {
            arrCustomerName[i] = orderingPanelManager.entities.customers.get(i).cname;
        }
        cbCustomer.setModel(new DefaultComboBoxModel<String>(arrCustomerName));    
        
        
         if(editorType == EditorType.CREATE){
            ordering = new Ordering();
            
            if((orderingPanelManager.entities.products.size()) > 0)
                cbProduct.setSelectedIndex(0);
            
            if((orderingPanelManager.entities.customers.size()) > 0)
                cbCustomer.setSelectedIndex(0);
            
        }else{
             
             cbProduct.setSelectedIndex(Helper.getIndexProductByCode(orderingPanelManager.entities.products, ordering.pcode));
             cbCustomer.setSelectedIndex(Helper.getIndexCustomerByCode(orderingPanelManager.entities.customers, ordering.ccode));
             
         }
        

        txtQuantity.setText(""+ordering.quantity);
    }
}
